"""
Has the modules necessary to generate crayion images
"""

import sys

# from os import getcwd
from json import loads
from io import BytesIO
from base64 import b64decode
from html import escape
from requests import post
from PIL import Image


def send_request(url, headers, data):
    """
    Requests?
    """
    resp = post(url, headers=headers, data=data)
    return loads(resp.text)["images"]


def craiyon_image(prompt, extension="png", output_dir=None):
    """
    Returns 9 images from craiyon generated by "prompt" and saved in "output_dir"
    """

    illegalChars = '<>:"/\|?*'.join([chr(i) for i in range(32)])

    #
    prompt = escape(prompt)
    fileFormat = extension.lower()

    if fileFormat.startswith("."):
        fileFormat = fileFormat[1:]

    #
    url = "https://backend.craiyon.com/generate"
    headers = {"Content-Type": "application/json"}
    data = f'"prompt": "{prompt}<br>"'
    data = "{" + data + "}"

    response = send_request(url, headers, data)

    decoded = []
    i = 0
    for image in response:
        i += 1
        decoded.append(BytesIO(b64decode(image)))

    i = 0
    newPrompt = "creation"

    if output_dir is None:
        output_dir_str = "~/Pictures/"
    else:
        output_dir_str = output_dir

    for image in decoded:
        i += 1
        im = Image.open(image).resize((360, 360))
        fileName = newPrompt + f"-{i}.{fileFormat}"
        output = output_dir_str + fileName
        im.save(output)

    return output


# COmmand line example
if __name__ == "__main__":

    craiyon_image(sys.argv[1], output_dir=sys.argv[2])
